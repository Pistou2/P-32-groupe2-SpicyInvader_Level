//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.42000
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SpicyInvader.SoundServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CompositeType", Namespace="http://schemas.datacontract.org/2004/07/WcfService")]
    [System.SerializableAttribute()]
    public partial class CompositeType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool BoolValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StringValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool BoolValue {
            get {
                return this.BoolValueField;
            }
            set {
                if ((this.BoolValueField.Equals(value) != true)) {
                    this.BoolValueField = value;
                    this.RaisePropertyChanged("BoolValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StringValue {
            get {
                return this.StringValueField;
            }
            set {
                if ((object.ReferenceEquals(this.StringValueField, value) != true)) {
                    this.StringValueField = value;
                    this.RaisePropertyChanged("StringValue");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SoundServiceReference.ISoundService")]
    public interface ISoundService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISoundService/PlaySound", ReplyAction="http://tempuri.org/ISoundService/PlaySoundResponse")]
        void PlaySound();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISoundService/PlaySound", ReplyAction="http://tempuri.org/ISoundService/PlaySoundResponse")]
        System.Threading.Tasks.Task PlaySoundAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISoundService/GetDataUsingDataContract", ReplyAction="http://tempuri.org/ISoundService/GetDataUsingDataContractResponse")]
        SpicyInvader.SoundServiceReference.CompositeType GetDataUsingDataContract(SpicyInvader.SoundServiceReference.CompositeType composite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISoundService/GetDataUsingDataContract", ReplyAction="http://tempuri.org/ISoundService/GetDataUsingDataContractResponse")]
        System.Threading.Tasks.Task<SpicyInvader.SoundServiceReference.CompositeType> GetDataUsingDataContractAsync(SpicyInvader.SoundServiceReference.CompositeType composite);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ISoundServiceChannel : SpicyInvader.SoundServiceReference.ISoundService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SoundServiceClient : System.ServiceModel.ClientBase<SpicyInvader.SoundServiceReference.ISoundService>, SpicyInvader.SoundServiceReference.ISoundService {
        
        public SoundServiceClient() {
        }
        
        public SoundServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SoundServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SoundServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SoundServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void PlaySound() {
            base.Channel.PlaySound();
        }
        
        public System.Threading.Tasks.Task PlaySoundAsync() {
            return base.Channel.PlaySoundAsync();
        }
        
        public SpicyInvader.SoundServiceReference.CompositeType GetDataUsingDataContract(SpicyInvader.SoundServiceReference.CompositeType composite) {
            return base.Channel.GetDataUsingDataContract(composite);
        }
        
        public System.Threading.Tasks.Task<SpicyInvader.SoundServiceReference.CompositeType> GetDataUsingDataContractAsync(SpicyInvader.SoundServiceReference.CompositeType composite) {
            return base.Channel.GetDataUsingDataContractAsync(composite);
        }
    }
}
